"use strict";(self.webpackChunkstryker_mutator_github_io=self.webpackChunkstryker_mutator_github_io||[]).push([[6538],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return c}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=u(r),c=n,d=h["".concat(l,".").concat(c)]||h[c]||m[c]||o;return r?a.createElement(d,i(i({ref:t},p),{},{components:r})):a.createElement(d,i({ref:t},p))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},3707:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var a=r(7462),n=(r(7294),r(3905));const o={slug:"csharp-and-scala-support",title:"Introducing Stryker.NET and Stryker4s",author:"Nico Jansen",author_title:"Stryker Team",author_url:"https://github.com/nicojs",author_image_url:"https://avatars3.githubusercontent.com/u/1828233?s=400&u=fec18ad3776aaafec54c49bbd7173a841ae7ea59&v=4",tags:["stryker4s","stryker.net"]},i=void 0,s={permalink:"/blog/csharp-and-scala-support",editUrl:"https://github.com/stryker-mutator/stryker-mutator.github.io/edit/develop/blog/2018-09-27-csharp-and-scala-support.md",source:"@site/blog/2018-09-27-csharp-and-scala-support.md",title:"Introducing Stryker.NET and Stryker4s",description:"We're excited to announce that we're doubling the number of supported languages for Stryker. We already had support for JavaScript and Typescript, and now both C# and Scala are supported as preview versions. Try them out and let us know what you think.",date:"2018-09-27T00:00:00.000Z",formattedDate:"September 27, 2018",tags:[{label:"stryker4s",permalink:"/blog/tags/stryker-4-s"},{label:"stryker.net",permalink:"/blog/tags/stryker-net"}],readingTime:2.915,hasTruncateMarker:!0,authors:[{name:"Nico Jansen",title:"Stryker Team",url:"https://github.com/nicojs",imageURL:"https://avatars3.githubusercontent.com/u/1828233?s=400&u=fec18ad3776aaafec54c49bbd7173a841ae7ea59&v=4"}],frontMatter:{slug:"csharp-and-scala-support",title:"Introducing Stryker.NET and Stryker4s",author:"Nico Jansen",author_title:"Stryker Team",author_url:"https://github.com/nicojs",author_image_url:"https://avatars3.githubusercontent.com/u/1828233?s=400&u=fec18ad3776aaafec54c49bbd7173a841ae7ea59&v=4",tags:["stryker4s","stryker.net"]},prevItem:{title:"Mutation switching in Stryker4s",permalink:"/blog/mutation-switching"},nextItem:{title:"Use git to select files",permalink:"/blog/use-git-to-select-files"}},l={authorsImageUrls:[void 0]},u=[{value:"New platforms",id:"new-platforms",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"One design mentality",id:"one-design-mentality",level:2},{value:"Collaboration",id:"collaboration",level:2},{value:"What about good old Stryker?",id:"what-about-good-old-stryker",level:2}],p={toc:u};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"We're excited to announce that we're doubling the number of supported languages for Stryker. We already had support for JavaScript and Typescript, and now both C# and Scala are supported as preview versions. Try them out and let us know what you think."),(0,n.kt)("h2",{id:"new-platforms"},"New platforms"),(0,n.kt)("p",null,"As you might know, both C# and Scala run on entirely different platforms compared to Stryker (which runs on NodeJS). This is the main reason we decided to implement them as\nseparate frameworks. ",(0,n.kt)("a",{parentName:"p",href:"/stryker-net"},"Stryker.NET")," is written in C# and runs as a .NET Core application, while ",(0,n.kt)("a",{parentName:"p",href:"/stryker4s"},"Stryker4s")," is written in Scala and runs on the JVM (Java Virtual Machine).\nAs of now, a version of Stryker.NET can be found on nuget.org, the package manager for the .NET platform. In due time, Stryker4s can be found on Maven Central."),(0,n.kt)("p",null,"Stryker.NET is the result of the internship of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/richardwerkman"},"Richard"),".",(0,n.kt)("br",{parentName:"p"}),"\n","Stryker4s is the result of the internship of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/hugo-vrijswijk"},"Hugo"),"."),(0,n.kt)("p",null,"Thanks to them both for their hard work and continued support."),(0,n.kt)("h2",{id:"getting-started"},"Getting started"),(0,n.kt)("p",null,"As you might have noticed, we've redesigned ",(0,n.kt)("a",{parentName:"p",href:"/"},"our website"),". It is focussed to help you get started on the platform of choice."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/stryker-net/quickstart"},"Get started with Stryker.NET")," (preview)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/stryker4s/quickstart"},"Get started with Stryker4s")," (preview)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/stryker/quickstart"},"Get started with Stryker")," (for JavaScript / TypeScript)")),(0,n.kt)("h2",{id:"one-design-mentality"},"One design mentality"),(0,n.kt)("p",null,"Although all 3 versions of Stryker are implemented on different platforms, the design goals are the same. It should be ",(0,n.kt)("em",{parentName:"p"},"easy to use")," and\n",(0,n.kt)("em",{parentName:"p"},"fast to run"),". Without compromises."),(0,n.kt)("p",null,"For Stryker JavaScript we're mutating ",(0,n.kt)("em",{parentName:"p"},"source code")," (as explained in our\n",(0,n.kt)("a",{parentName:"p",href:"/blog/2017-07-14/road-to-stryker-1-0"},"road to Stryker 1.0")," blog post), instead of transpiled/minified JavaScript code.\nThe main advantage is that it makes sure we only mutate ",(0,n.kt)("em",{parentName:"p"},"your actual code"),", instead of 3rd party library or minified code."),(0,n.kt)("p",null,"We wanted to offer the same quality to the .NET and Scala counterparts, but they have one additional problem: compiling code takes a long time.\nIt would dramatically reduce the performance of the frameworks. This is why we chose to implement a new mutation testing technique we call ",(0,n.kt)("em",{parentName:"p"},"Mutation Switching"),".\nWith this technique, we compile only once. This results in a drastic performance gain, without compromising the quality of the mutations.\nIt really deserves it's own blog post, so more on that later."),(0,n.kt)("h2",{id:"collaboration"},"Collaboration"),(0,n.kt)("p",null,"Though the 3 frameworks have their own code base, there are actually a lot of points on which we're planning to collaborate."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"One vocabulary"),"\\\nTerms like ",(0,n.kt)("em",{parentName:"li"},"mutant"),", ",(0,n.kt)("em",{parentName:"li"},"survived")," and ",(0,n.kt)("em",{parentName:"li"},"mutator")," will mean the same across platforms. We will even share the names\nfor the mutators, see ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/stryker-mutator/stryker-handbook/blob/master/mutator-types.md#supported-mutators"},"the supported mutators in our handbook"),"\nfor a comprehensive list of supported mutators."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"One website"),"\\\nWe'll keep things together with ",(0,n.kt)("a",{parentName:"li",href:"/"},"one website"),". This will help visibility for all platforms and keep things simple for our users."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"One html reporter"),"\\\nWe're redesigning our html report as ",(0,n.kt)("a",{parentName:"li",href:"https://www.webcomponents.org/"},"HTML 5 web components"),". It really is it's own thing and might even be used for other mutation testing frameworks out there.\nInterested to help? Please let us know! ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/stryker-mutator/mutation-testing-elements"},"Github repository here"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"One dashboard"),"\\\nWe're planning on supporting our ",(0,n.kt)("a",{parentName:"li",href:"https://dashboard.stryker-mutator.io"},"mutation testing dashboard")," for all 3 implementations.")),(0,n.kt)("h2",{id:"what-about-good-old-stryker"},"What about good old Stryker?"),(0,n.kt)("p",null,"You might wonder what this all means for Stryker (for JavaScript and friends). Well, not much. The core developers are still here, focussed as ever.\nWe're still focused on getting the 1.0 release out there for you.\nWe had to invest some time in the overhead of setting this all up, but it will result in better and more complete frameworks in the end."))}m.isMDXComponent=!0}}]);