"use strict";(self.webpackChunkstryker_mutator_github_io=self.webpackChunkstryker_mutator_github_io||[]).push([[6426],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),k=l(r),d=i,m=k["".concat(p,".").concat(d)]||k[d]||u[d]||o;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=k;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},5384:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l}});var n=r(7462),i=(r(7294),r(3905));const o={title:"TypeScript Checker",custom_edit_url:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/typescript-checker.md"},a=void 0,s={unversionedId:"stryker-js/typescript-checker",id:"stryker-js/typescript-checker",title:"TypeScript Checker",description:"A TypeScript type checker plugin for Stryker, the JavaScript TypeScript Mutation testing framework.",source:"@site/docs/stryker-js/typescript-checker.md",sourceDirName:"stryker-js",slug:"/stryker-js/typescript-checker",permalink:"/docs/stryker-js/typescript-checker",editUrl:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/typescript-checker.md",tags:[],version:"current",frontMatter:{title:"TypeScript Checker",custom_edit_url:"https://github.com/stryker-mutator/stryker-js/edit/master/docs/typescript-checker.md"},sidebar:"docs",previous:{title:"Mocha Runner",permalink:"/docs/stryker-js/mocha-runner"},next:{title:"Troubleshooting",permalink:"/docs/stryker-js/troubleshooting"}},p={},l=[{value:"Features",id:"features",level:2},{value:"Install",id:"install",level:2},{value:"Configuring",id:"configuring",level:2},{value:"<code>tsconfigFile</code> string",id:"tsconfigfile-string",level:3},{value:"Peer dependencies",id:"peer-dependencies",level:2},{value:"Load the plugin",id:"load-the-plugin",level:2}],c={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A TypeScript type checker plugin for Stryker, the ",(0,i.kt)("del",{parentName:"p"},"JavaScript")," ",(0,i.kt)("em",{parentName:"p"},"TypeScript")," Mutation testing framework.\nThis plugin enables type checking on mutants, so you won't have to waste time on mutants which result in a type error."),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("p",null,"\ud83d\udc7d Type check each mutant. Invalid mutants will be marked as ",(0,i.kt)("inlineCode",{parentName:"p"},"CompileError")," in your Stryker report.",(0,i.kt)("br",null),"\n\ud83e\uddd2 Easy to setup, only your ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file is needed.",(0,i.kt)("br",null),"\n\ud83d\udd22 Type check is done in-memory, no side effects on disk.",(0,i.kt)("br",null),"\n\ud83c\udf81 Support for both single typescript projects as well as projects with project references (",(0,i.kt)("inlineCode",{parentName:"p"},"--build")," mode)."),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("p",null,"First, install Stryker itself (you can follow the ",(0,i.kt)("a",{parentName:"p",href:"/docs/stryker-js/getting-started"},"getting started"),")"),(0,i.kt)("p",null,"Next, install this package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @stryker-mutator/typescript-checker\n")),(0,i.kt)("h2",{id:"configuring"},"Configuring"),(0,i.kt)("p",null,"You can configure the typescript checker in the ",(0,i.kt)("inlineCode",{parentName:"p"},"stryker.conf.js")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"stryker.conf.json"),") file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "checkers": ["typescript"],\n  "tsconfigFile": "tsconfig.json"\n}\n')),(0,i.kt)("h3",{id:"tsconfigfile-string"},(0,i.kt)("inlineCode",{parentName:"h3"},"tsconfigFile")," ","[",(0,i.kt)("inlineCode",{parentName:"h3"},"string"),"]"),(0,i.kt)("p",null,"Default: ",(0,i.kt)("inlineCode",{parentName:"p"},"'tsconfig.json'")),(0,i.kt)("p",null,"The path to your ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"},"tsconfig"),". Project references ",(0,i.kt)("em",{parentName:"p"},"are supported"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--build")," mode will be enabled automatically when references are found in your tsconfig.json file."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note: the following compiler options are always overridden by @stryker-mutator/typescript-checker to avoid false positives. See ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/stryker-mutator/stryker-js/issues/391#issue-259829320"},"issue 391")," for more information on this")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "allowUnreachableCode": true,\n    "noUnusedLocals": false,\n    "noUnusedParameters": false\n  }\n}\n')),(0,i.kt)("h2",{id:"peer-dependencies"},"Peer dependencies"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@stryker-mutator/typescript-checker")," package for ",(0,i.kt)("inlineCode",{parentName:"p"},"stryker")," to enable ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," support. As such, you should make sure you have the correct versions of its dependencies installed:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"typescript")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@stryker-mutator/core"))),(0,i.kt)("p",null,"For the current versions, see the ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies")," section in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stryker-mutator/stryker-js/blob/master/packages/typescript-checker/package.json"},"package.json"),"."),(0,i.kt)("h2",{id:"load-the-plugin"},"Load the plugin"),(0,i.kt)("p",null,"In this plugin the ",(0,i.kt)("inlineCode",{parentName:"p"},"@stryker-mutator/typescript-checker"),"' must be loaded into Stryker.\nThe easiest way to achieve this, is ",(0,i.kt)("em",{parentName:"p"},"not have a ",(0,i.kt)("inlineCode",{parentName:"em"},"plugins")," section")," in your config file. That way, all plugins starting with ",(0,i.kt)("inlineCode",{parentName:"p"},'"@stryker-mutator/"')," will be loaded."),(0,i.kt)("p",null,"If you do decide to choose specific modules, don't forget to add ",(0,i.kt)("inlineCode",{parentName:"p"},'"@stryker-mutator/typescript-checker"')," to the list of plugins to load."))}u.isMDXComponent=!0}}]);